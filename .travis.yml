variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
cache:
  key: "${CI_JOB_NAME}"
  paths:
  - ".cache/pip"
  - ".venv"
env:
  global:
  - secure: csPZtUC3rc+So9Ou3W7dXyYf3sonDb0p2Gc6r8xvW2TC8vrXd1JS3A8N6rvguu+Sa1ITHGl1WVvDPeS14OOODJSvcpuHxqkGI8kX/2Vq5w0L0t5Qm3fgHBjt+RWG/mOkXj0YEjoLrJDQHkEjyWLx6m2lgEkza1C1k4qFrkfU8qjTnkcp5wQwxPULxzLLXXYVpvsxvM4jeAiwN0Ix+AcZtupI2vuD1u7dc8vgfTGVQd/YVBIRUi8wd2HSwjgZmzBgfwWAPUQYsUkKSfnRq1XpUvZzDPvZADXCrnNtm1lx2s8m/pu3BShniG7lOdnVdjx0h4BD/6yrGMQEx1y7iKn6G2iU5Wjln5jbF2v54+KBTDB44O5HLeg9BvAi+GU2A701bXhwRSIWRNETh0L+S5gC37rNprRpwvd2/VEw9JtyJ7HBu6VfBxhML6RmQFzyaxayBb4KHyA8X8runRw1KjNfYJcLOCjrBf3HcZDurvChi482Gs7y/hjocb6nJ0tYg2/ktRPrB1c2P7g+p6QIM4x5QIHz44Iri/GrSt++46XRpNpIwTr0AG4WEj+1iHCmFrCUzfrvtCiYvsmDpcYFAWKnqFz9myeK+Gel00nRt2Jj1w5mys1eyRf+Db5V14/g/y6N559dk17X2bhWnzbzb0aD1pJfcJ8rJ6TXB2ctIXhnagk=
  - secure: lL7Fs6nMgz/JXOSQbh9nO/BitYFNnvXe2Jy50Da2PuntPpellUCVNcH0N5YSpf5w6VOSflqpwJUe3CjT+buPnhfvPKDIFx4uaQ2HqutkQ7vI/5WEhpXxjvUB3lkeDKxPtjd8TlhaCo6wgiIDFYbV2nWRzTKGYRoasdH3Hhu295L0WWvIvBOVBbty4EFtn+WkdH+twhVbVb7U8uUe10yJvO8xEysccMspOkdhQ20s6tuOzlvUMtHHNFDQwqk2R73ZB1mpRk7ImRY0PLpkcp6QJpi6a8LRKETzIDGD3po2b+CWDLedkkQXyJepVPF2sGj9d9aEWgS6i0TV9Mc/wHaZRh48hyZye85b6aJyM/ZBPmP8Aw2O8mQepcV1pgpo3aASmWgaFI6qoP1gYemfAs1RvPI6PQgH9OnoP0vbDxv5Le3siqL9te4xEjvh/qEOPeAbKN0W9tHlvvB7I2FFE8+HLsPK3g1KADG7m7ttdsYZNQFV/BZibvNJ+2goGlgakVFUPRnB8o1Z3D5w6uUtYTnxtxj75ha6IMJa6Ld5htqn8VL1B/CiyncRQFYfl3oq5gb3QxYNI5D86A4qCgCJVpElgXwcOwTZBiEpOKZBh2keZKAGXbz3jl9cTL+sG3sWcpZImQkekoMDYBmEM0PAOFnTwPkq8JO+NEuJ+1fDIo260Jo=
stages:
- quality
- tests
".install-deps-template":
  before_script: &1
  - pip install poetry
  - poetry --version
  - poetry config settings.virtualenvs.in-project true
  - poetry install -vv
".quality-template":
  before_script: *1
  image: python:3.6
  stage: quality
".test-template":
  before_script: *1
  stage: tests
  coverage: "/TOTAL.*\\s(\\d+\\.\\d+\\%)/"
  script: make test
  artifacts: &2
    paths:
    - tests/logs
    when: always
    expire_in: 1 week
check-bandit:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-bandit
check-black:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-black
check-flake8:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-flake8
check-isort:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-isort
check-safety:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-safety
python3.6:
  before_script: *1
  stage: tests
  coverage: "/TOTAL.*\\s(\\d+\\.\\d+\\%)/"
  script: make test
  artifacts: *2
  image: python:3.6
python3.7:
  before_script: *1
  stage: tests
  coverage: "/TOTAL.*\\s(\\d+\\.\\d+\\%)/"
  script: make test
  artifacts: *2
  image: python:3.7
python3.8:
  before_script: *1
  stage: tests
  coverage: "/TOTAL.*\\s(\\d+\\.\\d+\\%)/"
  script: make test
  artifacts: *2
  image: python:3.8
script:
- poetry run flake8 my_package test
- poetry run coverage run --source=my_package -m unittest discover -b
before_deploy:
- poetry config repositories.mypypi http://mypypi.example.com/simple
- poetry config http-basic.mypypi $MYPYPI_USER $MYPYPI_PASS
- poetry build -f sdist
deploy:
  provider: script
  script: poetry publish -r mypypi
  skip_cleanup: true
  on:
    tags: true
