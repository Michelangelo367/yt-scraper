variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
cache:
  key: "${CI_JOB_NAME}"
  paths:
  - ".cache/pip"
  - ".venv"
env:
  global:
  - secure: gkpdP8RbmsxyNF6f+wQdxgqWLVTS1da62yMeur72qc8gro9ZDMj19GDdPn0s4Yqx1inDMD/DYYrc6SjZNK8voewGfncQzYujMb29SF0RoTCuYn2RQxxhrJ4vhm/6L2CFu7+TOsVw7c/uf2JULsPT1L616UEj9Dat/XLhRQhLaNBxGCWpGiwpVDqEufdkdjkHpOq0rHfpizNvxWzrNWF5qYbhBVGq4MvVybaLskpVpO5te2RDg4YSYLBVDV3ci+bdoSlYfKMkKpyRoeDzPa9btMK/ht63ZslgcSgHtQUZ1VhX5XH07uUZrCt/tb5nJ02ISCYiHUs3BAe+wmewRpctps8b9FviNUjW1SlbPol/Ch/KF7B5zWEHUhSbGG7zxPznYcwQpYeHe6hAcRg1dE7vJoZBkBzK4rWfIrZSSfUFkt1Rls3goZzWqFeghjl03mtQgOt3JtJyLFhhb/f1nPp+4nqOEwiRu7VvdcfqpG6Aa6hsHg5UgEzJRAu4PFJBiyYc8pHaNzrVmySWkgHBsONscN21t9/w0Ytv1h9q/7fEOjftZe/dN95Kku31TKQoE0j0UzldJ8/+U6AEYZdXk+vbiBNlIU3vmII8RcxpYExuLK4O60V57X1BC7QghS4ygfDz95DC6Ex3SkMI9X2lO2ETMDPurNZaioSGYiSCsHbYun8=
  - secure: JdUQFstahXUIjd1D/hVXVk1VmcLpxua9nppeJuvgiWjE2foOlqqqp6IT0rt9onNThhKHByd+HmFgtyV/SuzF/rS1+gEa8V2GyByfofbSjjoxX/MsBUbxGE7DfnMkjT42JUctCZEA5uWzn839+Gcj92XfMAENbwWhbYfd3w+YsJXBZSExCj1miq4NBRNUi/3+Daqnqx78uDF+33aKXiuWd61b5vxrpbbB552bUEPPgkz9TelByUdLJIooz0gtgI77RimzdXmn3vKmxNRXKRTbfi6mJP0dQW0QbVrIhMVSb32soQBSMm0qy9XMaN7AxacCzdG/0TOquRqJtJR2gerv/PgL/MJeKKnMHRi+znhU2l1v3MomX55x7LuhB77+F6/kMlGgXVcuPQ5BxrD8zHyPBfuqDsRyIk6zvJ2y7slrTK3c0DLdO30ihCZeGoMmw2GKCZHOcnvTDJUQNNKVeu3NkBUzdT3peORC9QiQKeFZefi90OhfgSmYCkBRdgKxO5Vbd8RfOWghGrEhe1uvIsZZexamNSv5pq66oaB5+BMCASVY+ZmrCRChSDF2/isIWyUhc4lqs8cMSqXIaKldbqKXZVbNIxD9oKeODum5J5VC9KpdWtEE9dzx1ahBB6cYLJzHmUnC+6hE77T/clL8PtEFA4MxNl9cjqVu8GfC4WjhTWo=
stages:
- quality
- tests
".install-deps-template":
  before_script: &1
  - pip install poetry
  - poetry --version
  - poetry config settings.virtualenvs.in-project true
  - poetry install -vv
".quality-template":
  before_script: *1
  image: python:3.6
  stage: quality
".test-template":
  before_script: *1
  stage: tests
  coverage: "/TOTAL.*\\s(\\d+\\.\\d+\\%)/"
  script: make test
  artifacts: &2
    paths:
    - tests/logs
    when: always
    expire_in: 1 week
check-bandit:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-bandit
check-black:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-black
check-flake8:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-flake8
check-isort:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-isort
check-safety:
  before_script: *1
  image: python:3.6
  stage: quality
  script: make check-safety
python3.6:
  before_script: *1
  stage: tests
  coverage: "/TOTAL.*\\s(\\d+\\.\\d+\\%)/"
  script: make test
  artifacts: *2
  image: python:3.6
python3.7:
  before_script: *1
  stage: tests
  coverage: "/TOTAL.*\\s(\\d+\\.\\d+\\%)/"
  script: make test
  artifacts: *2
  image: python:3.7
python3.8:
  before_script: *1
  stage: tests
  coverage: "/TOTAL.*\\s(\\d+\\.\\d+\\%)/"
  script: make test
  artifacts: *2
  image: python:3.8
script:
- poetry run flake8 my_package test
- poetry run coverage run --source=my_package -m unittest discover -b
before_deploy:
- poetry config repositories.mypypi http://mypypi.example.com/simple
- poetry config http-basic.mypypi $MYPYPI_USER $MYPYPI_PASS
- poetry build -f sdist
deploy:
  provider: script
  script: poetry publish -r mypypi
  skip_cleanup: true
  on:
    tags: true
